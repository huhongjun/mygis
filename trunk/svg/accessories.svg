<svg id="graph" width="800" height="640" preserveAspectRatio="yes" a:scriptImplementation="Adobe" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:a="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/" 
	onload="getURL( 'query.asp?get=categories', showListOfCategories);">
	<!--

		Scenario:
		1) We are getting a list of regions. 
		2) User selects one, an overall title is sets up to that region. We are getting a list of accessory categories with images. 
		3) User selects one, an overall title is extended with the category name. The selected category is centered.
		4) User clicks on the thmbnail to see all accessories.
		5) User clicks on each accessory to see all cameras. Links to cameras for which this accessory is recomended is bold.
	-->
	<script type="text/javascript" a:scriptImplementation="Adobe">
var svgns = "http://www.w3.org/2000/svg";
var xlinkns = "http://www.w3.org/1999/xlink";
var rdfns = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
var svgelement = document.rootElement;
var blubsgroup = document.getElementById("blubs");
var sproingsgroup = document.getElementById("sproings");
var nextId = 0;
var blubs = new Array();
var blubhash = new Array();
var sproings = new Array();
var currentBlubId = -1;
var dataReady = 0;
var dirList = new Array();
var svcList = new Array(); 
var centerX = 400;
var centerY = 310;		
var mmodelsList = new Array(); 


var currentCategory="";
var currentRegion="";
//var theHost ="http://localhost/kodakSVG/"
var theHost ="http://www.cogx.com/kodakSVG/"
var catList = new Array(); 

function showListOfCategories(urlRS) {
  //alert(urlRS.content);
  var doc = parseXML(urlRS.content);

  channel = doc.getElementsByTagName("channel");
  document.getElementById('region').getFirstChild().setNodeValue(channel.item(0).getAttribute("name"));
  items = doc.getElementsByTagName("item");
  count = 0;
  for (var i=0; i &lt; items.length; i++) {
        catList [count] = new CategoryBlub(50, 70+90 * i , centerX, centerY, items.item(i).getAttribute("id"), items.item(i).getChildNodes().item(0).getNodeValue(), items.item(i).getAttribute("src"))
        count = count + 1;
  }
  dataReady = 1;
}

function CategoryBlub(x, y, startx, starty, id, name, img) {
  if (typeof blubhash[name]=='undefined') {

  this.identifier = id;

  this.x = x;
  this.y = y;
  this.type= "category";
  this.id = nextId;
  this.dragState = 0;
  this.expanded = 0;
  this.name = name;
  this.link = theHost + "query.asp?get=accessories&amp;id=" + id ;
  this.deleted = 0;
  this.inlines = new Array();
  this.outlines = new Array();
  this.startx = startx;
  this.starty = starty;
  nextId++;
  blubs[this.id] = this;
  blubhash[name] = this;
  this.group = document.createElementNS(svgns, "g");
  this.node = document.createElementNS(svgns, "image");
  this.group.setAttribute("onmousedown", "blubDragOn(" + this.id + ");");
  this.group.setAttribute("onmouseup", "blubDragOff();");
  this.group.setAttribute("onmousemove", "dragBlub(evt);");
  this.node.setAttributeNS(xlinkns, "href", img);
  this.node.setAttribute("y", "-25");
  this.node.setAttribute("width", "50");
  this.node.setAttribute("height", "50");
  this.node.setAttribute("x", "-25");
  this.group.setAttribute("onclick", "expandBlub(" + this.id+ ");");
  this.group.appendChild(this.node);
  this.text = document.createElementNS(svgns, "text");
  this.text.setAttribute("y", "50");
  this.text.setAttribute("x", "0");
  this.text.setAttribute("fill", "black");
  this.text.setAttribute("font-size", "18");
  this.text.setAttribute("font-family", "'Trebuchet MS', sans-serif");
  this.text.setAttribute("text-anchor", "middle");
  //this.text.setAttribute("pointer-events", "none");
  //this.text.appendChild(document.createTextNode(getXML(this.node)));
  this.text.appendChild(document.createTextNode(name));
  this.group.appendChild(this.text);
  moveBlubTo(this, startx, starty);
  blubsgroup.appendChild(this.group);
  setTimeout("moveBlub(" + this.id + ")", 10);
  }
}
function AccessoryBlub(x, y, startx, starty, item) {

  if (typeof blubhash[item.label]=='undefined') {
  var buttonloc = 0;
  this.x = x;
  this.y = y;
  this.type= "accessory";
  this.id = nextId;
  this.dragState = 0;
  this.expanded = 0;
  this.name = item.label;
  this.link = theHost + "query.asp?get=models&amp;id=" + item.id+"&amp;category=" +currentCategory;
  this.deleted = 0;
  this.inlines = new Array();
  this.outlines = new Array();
  this.startx = startx;
  this.starty = starty;
  nextId++;
  blubs[this.id] = this;
  blubhash[item.label] = this;

  this.group = document.createElementNS(svgns, "g");
  this.node = document.createElementNS(svgns, "image");
  this.group.setAttribute("onmousedown", "blubDragOn(" + this.id + ");");
  this.group.setAttribute("onmouseup", "blubDragOff();");
  this.group.setAttribute("onmousemove", "dragBlub(evt);");
  this.node.setAttributeNS(xlinkns, "href", item.src);
  this.node.setAttribute("y", "-20");
  this.node.setAttribute("width", "40");
  this.node.setAttribute("height", "40");
  this.node.setAttribute("x", "-20");
  this.group.setAttribute("onclick", "expandBlub(" + this.id+ ");");
  this.group.appendChild(this.node);
 // alert(getXML(this.node))
  this.text = document.createElementNS(svgns, "text");
  this.text.setAttribute("y", "30");
  this.text.setAttribute("x", "0");
  this.text.setAttribute("fill", "black");
  this.text.setAttribute("font-size", "9");
  this.text.setAttribute("font-family", "'Trebuchet MS', sans-serif");
  this.text.setAttribute("text-anchor", "middle");
  this.text.appendChild(document.createTextNode(item.label));
  this.group.appendChild(this.text);
  moveBlubTo(this, startx, starty);
  blubsgroup.appendChild(this.group);
  setTimeout("moveBlub(" + this.id + ")",10);
  }
}
function ModelBlub(x, y, startx, starty, item) {
  if (typeof blubhash[item.label]=='undefined') {
  var buttonloc = 0;
  this.x = x;
  this.y = y;
  this.type= "model";
  this.id = nextId;
  this.dragState = 0;
  this.expanded = 0;
  this.name = item.label;
  this.link = theHost + "query.asp?get=models&amp;id=" + item.id;
  this.deleted = 0;
  this.inlines = new Array();
  this.outlines = new Array();
  this.startx = startx;
  this.starty = starty;
  nextId++;
  blubs[this.id] = this;
  blubhash[item.label] = this;

  this.group = document.createElementNS(svgns, "g");
  this.node = document.createElementNS(svgns, "image");
  this.group.setAttribute("onmousedown", "blubDragOn(" + this.id + ");");
  this.group.setAttribute("onmouseup", "blubDragOff();");
  this.group.setAttribute("onmousemove", "dragBlub(evt);");
  this.node.setAttributeNS(xlinkns, "href", item.src);
  this.node.setAttribute("y", "-20");
  this.node.setAttribute("width", "40");
  this.node.setAttribute("height", "30");
  this.node.setAttribute("x", "-15");
  this.group.setAttribute("onclick", "expandBlub(" + this.id+ ");");
  this.group.appendChild(this.node);
 // alert(getXML(this.node))
  this.text = document.createElementNS(svgns, "text");
  this.text.setAttribute("y", "20");
  this.text.setAttribute("x", "0");
  this.text.setAttribute("fill", "black");
  this.text.setAttribute("font-size", "9");
  this.text.setAttribute("font-family", "'Trebuchet MS', sans-serif");
  this.text.setAttribute("text-anchor", "middle");
  this.text.appendChild(document.createTextNode(item.label));
  this.group.appendChild(this.text);
  moveBlubTo(this, startx, starty);
  blubsgroup.appendChild(this.group);
  setTimeout("moveBlub(" + this.id + ")",10);
  }
}


function expandBlub(id) {
//alert(currentCategory);

  var theBlub = blubs[id];
  if (theBlub.expanded == 0) {
    dataReady = 0;
    if (theBlub.type == "category") {
	  for (var i=0; i&lt;catList.length; i++) {
		if (catList[i].id != id)
			catList[i].group.style.setProperty("display","none");
		else{
			theBlub.x = centerX;
			theBlub.y = centerY;
			setTimeout("moveBlub(" + theBlub.id + ")", 10);
		}

	  }
	currentCategory=theBlub.identifier;
       getURL(theBlub.link, getAccessories);
       setTimeout("addAccessories(" + theBlub.id + ")", 10);
    } else if (theBlub.type == "accessory") {
       getURL(theBlub.link, getModels);
       setTimeout("addModels(" + theBlub.id + ")", 10);
    } else { 
       //getURL(theBlub.link+'&amp;gvlan='+currentCategory, cbServices);
       //setTimeout("addServices(" + theBlub.id + ")", 10);
    }
 
  }else if (theBlub.expanded == -1) {
	for (var i=0; i&lt;theBlub.outlines.length; i++) {
	       theBlub.outlines[i].style.setProperty("display","block");
	}
	theBlub.expanded = 1;
 
  }else{
	  for (var i=0; i&lt;theBlub.outlines.length; i++) {
	       theBlub.outlines[i].style.setProperty("display","none");
	  }
	  theBlub.expanded = -1;
  }
}

function getAccessories(urlRS) {
  var doc = parseXML(urlRS.content);
  var items = doc.getElementsByTagName("item");
  accList = new Array();
  count = 0;
  for (var i=0; i &lt; items.length &amp;&amp; count &lt; 40; i++) {
       accList[count] = new Item(items.item(i));
       count = count + 1;
  }
  
  dataReady = 1;
}

function getModels(urlRS) {
  var doc = parseXML(urlRS.content);
 // alert(urlRS.content);
  items = doc.getElementsByTagName("item");
  modelsList = new Array();
  count = 0;
   for (var i=0; i &lt; items.length &amp;&amp; count &lt; 40; i++) {
      	modelsList [count] = new Item(items.item(i));
       count = count + 1;
  }
  dataReady = 1;
}

function Item(item) {
  this.id = item.getAttribute("id");
  this.label= item.getChildNodes().item(0).getNodeValue();
  this.src= item.getAttribute("src");
  this.r= item.getAttribute("r")+"";
  this.pnum= item.getAttribute("pnum")+"";
}

function addAccessories(id) {
  var theBlub = blubs[id];
  if (!dataReady) {
    setTimeout("addAccessories(" + theBlub.id + ")", 10);
  } else {
    var numBlubsToCreate = accList.length;
    var offset = Math.random() * 2 * Math.PI;
    for (var i=0; i &lt; numBlubsToCreate; i++) {
      var dir = accList[i];
      var existing = findBlub(dir.label);
      if (existing == null) {
        newX = theBlub.x + Math.round(Math.cos(2*Math.PI/numBlubsToCreate*i + offset) * 150);
        newY = theBlub.y + Math.round(Math.sin(2*Math.PI/numBlubsToCreate*i + offset) * 150);
        var blub = new AccessoryBlub(newX, newY, theBlub.x, theBlub.y, dir);
        //var color=(dir.role=="web")?"#aa6666":(dir.role=="app")?"#55aa66":"#5555aa";
	 var color="#aa55aa";
        addLine(theBlub, blub,color,"2");
      } else {
        if (existing.deleted != 1)
          addExistingLine(theBlub, existing,color,"2");
      }    }
    theBlub.expanded = 1;
    dataReady = 0;
  }
}


function addModels(id) {
  var theBlub = blubs[id];
  if (!dataReady) {
    setTimeout("addModels(" + theBlub.id + ")", 10);
  } else {
    var numBlubsToCreate = modelsList.length;

    for (var i=0; i &lt; numBlubsToCreate; i++) {

      var item = modelsList[i];

      var existing = findBlub(item.label);
      if (existing == null) {
        newX = centerX + Math.round(Math.cos(2*Math.PI * item.pnum) * 290);
        newY = centerY + Math.round(Math.sin(2*Math.PI * item.pnum) * 290);
	 //   var offset = Math.random() * 2 * Math.PI;
        //newX = centerX  + Math.round(Math.cos( offset) * 300);
        //newY = centerY  + Math.round(Math.sin( offset ) * 300);
        var blub = new ModelBlub(newX, newY, theBlub.x, theBlub.y, item);
	  if (item.r == "r"){
          addLine(theBlub, blub,'#00fedc',"2"); //FCC202
        }else
          addLine(theBlub, blub,'#90aaa0',"1");
      } else {
          if (existing.deleted != 1)
		  if (item.r == "r"){
	          addExistingLine(theBlub, existing,'#00fedc',"2");
	        }else
	          addExistingLine(theBlub, existing,'#90aaa0',"1");
          
          //addExistingLine(theBlub, existing);
      }
    }
    theBlub.expanded = 1;
    dataReady = 0;
  }
}


function deleteBlub(id) {
  var theBlub = blubs[id];
  blubsgroup.removeChild(theBlub.group);  
  for (var i=0; i&lt;theBlub.outlines.length; i++) {
       sproingsgroup.removeChild(theBlub.outlines[i]);
  }
  for (var i=0; i&lt;theBlub.inlines.length; i++) {
       sproingsgroup.removeChild(theBlub.inlines[i]);
  }
  theBlub.expanded =-1;
}

function addLine(from, to, color,wdth) {
  var line = document.createElementNS(svgns, "line");
  line.setAttribute("x1", from.x);
  line.setAttribute("y1", from.y);
  line.setAttribute("x2", to.startx);
  line.setAttribute("y2", to.starty);
  line.setAttribute("stroke", color);//"#8d8"
  line.setAttribute("stroke-width", wdth);
  from.outlines[from.outlines.length] = line;
  to.inlines[to.outlines.length] = line;
  sproingsgroup.appendChild(line);
}
function addExistingLine(from, to, color,wdth) {
  var line = document.createElementNS(svgns, "line");
  line.setAttribute("x1", from.x);
  line.setAttribute("y1", from.y);
  line.setAttribute("x2", to.x);
  line.setAttribute("y2", to.y);
  line.setAttribute("stroke", color);//"#888888");
  line.setAttribute("stroke-width", wdth);//"1");
  from.outlines[from.outlines.length] = line;
  to.inlines[to.inlines.length] = line;
  sproingsgroup.appendChild(line);
}
function moveBlubTo(blub, x, y) {
  blub.group.setAttribute("transform", "translate("+x+","+y+")");
  blub.groupx = x;
  blub.groupy = y;
  for (var i=0; i &lt; blub.inlines.length; i++) {
    blub.inlines[i].setAttribute("x2", x);
    blub.inlines[i].setAttribute("y2", y);
  }
  for (var i=0; i &lt; blub.outlines.length; i++) {
    blub.outlines[i].setAttribute("x1", x);
    blub.outlines[i].setAttribute("y1", y);
  }
}
function blubDragOn(id) {
  blubs[id].dragState = 1;
  currentBlubId = id;
}
function blubDragOff() {
  if (currentBlubId != -1) {
    blubs[currentBlubId].dragState = 0;
    currentBlubId = -1;
  }
}
function dragBlub(evt) {
  if (currentBlubId != -1) {
    var theBlub = blubs[currentBlubId];
    if (theBlub.dragState) {
      
      nowToX = evt.getClientX();
      nowToY = evt.getClientY();
      // handle the current zoom and pan
      var trans = document.documentElement.currentTranslate;
      var scale = document.documentElement.currentScale;
      //alert(nowToX  + ", " +  nowToX + "; " +trans.x + ", " +  trans.y + " = " + scale );
      nowToX = (nowToX - trans.x) / scale;
      nowToY = (nowToY - trans.y) / scale;
      theBlub.x = nowToX;
      theBlub.y = nowToY;
      moveBlubTo(theBlub, nowToX, nowToY);
    }
  }
}
function hasChild(parent, child) {
  if (parent.hasChildNodes()) {
    for (var i=0; i&lt;parent.childNodes.length;i++) {
    }
  }
}
function findBlub(name) {
  return blubhash[name];
}



function moveBlub(id) {
  var theBlub = blubs[id];
  nowX = theBlub.groupx;
  nowY = theBlub.groupy;
  var toX = theBlub.x;
  var toY = theBlub.y;
  var dx = toX - nowX;
  var dy = toY - nowY;
  if (dx &gt; -3 &amp;&amp; dx &lt; 3 &amp;&amp; dy &gt; -3 &amp;&amp; dy &lt; 3) {
    nowToX = toX;
    nowToY = toY;
  } else {
    nowToX = nowX + dx / 6.0;
    nowToY = nowY + dy / 6.0;
    setTimeout("moveBlub(" + id + ")", 10);
  }
  moveBlubTo(theBlub, nowToX, nowToY);
}

function showSelector() {
  document.getElementById("companyselector").setAttribute("display", "inline");
}
function Title(doc, sz)
{
   this.element = null;  // element to show title of ..
   Title.size = sz;      // text size ..
   Title.scl = doc.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..
   Title.off = doc.getDocumentElement().getCurrentTranslate(); // offset modified by zooming ..
   this.Create(doc);
   doc.getDocumentElement().addEventListener("zoom", Title.Zoom, false);
   window.svgTitle = this;
}

Title.prototype.Create = function(doc)
{
   this.rec = doc.createElement("rect");
   this.rec.setAttribute("y", -0.9*Title.size);
   this.rec.setAttribute("x", -0.25*Title.size);
   this.rec.setAttribute("width", "100");
   this.rec.setAttribute("height", 1.25*Title.size + 1);
   this.rec.setAttribute("style", "stroke:black;fill:#eeeeee;stroke-width:0.5");

   this.str = doc.createTextNode("");

   this.txt = doc.createElement("text")
   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");
   this.txt.appendChild(this.str);

   this.grp = doc.createElement("g"),
   this.grp.setAttribute("transform", "translate(0,0)");
   this.grp.setAttribute("visibility", "hidden");
   this.grp.appendChild(this.rec);
   this.grp.appendChild(this.txt);

   doc.getDocumentElement().appendChild(this.grp);
}

Title.Activate = function Title_Activate(evt,id)
{
 if (id != null){
   var theBlub = blubs[id];
   var title=theBlub.title + " aa  a a   a";
   if (window.svgTitle.element == null)
   {
	var  x = theBlub.x/Title.scl + 15,
	y = theBlub.y/Title.scl +15;
	var a = title.split(" ");

	window.svgTitle.element = evt.getCurrentTarget();
	window.svgTitle.element.removeEventListener("mouseover", Title.Activate, false);
	window.svgTitle.element.addEventListener("mouseout", Title.Passivate, false);
	window.svgTitle.str.setNodeValue(a[1]);
	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");
	window.svgTitle.grp.setAttribute("visibility", "visible");
   }
 }
}

Title.Passivate = function Title_Passivate(evt)
{
   if (window.svgTitle.element != null)
   {
      window.svgTitle.grp.setAttribute("visibility", "hidden");
      window.svgTitle.element.removeEventListener("mouseout", Title.Passivate, false);
      window.svgTitle.element.addEventListener("mouseover", Title.Activate, false);
      window.svgTitle.element = null;
   }
}

Title.Zoom = function Title_Zoom(evt)
{
   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();

   Title.size *= Title.scl/newscl;
   Title.scl = newscl;
   Title.off = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentTranslate();

   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);
   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);
   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);
   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/Title.scl);
   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");
}
function getXML(node){

	var str = "&lt;" + node.getNodeName()
	var attributes=node.getAttributes();
	if(attributes != null){
		for (var i=0; i&lt;attributes.length; i++){
			str += " " + attributes.item(i).getName() +"='" + attributes.item(i).value+"'";
		}
	}
	str += ">"
	var children=node.getChildNodes();
	if(children != null){
		for (var i=0; i&lt;children.length; i++){
			if (children.item(i).getNodeType() == 1){
				str += getXML(children.item(i));
			}else if (children.item(i).getNodeType() == 3){
				str += children.item(i).getNodeValue();
			}
		}
	}
	str += "&lt;/" + node.getNodeName() + ">"
	return str;
  }
</script>
	<rect id="canvas" x="-1000%" y="-1000%" width="3000%" height="3000%" fill="white" onmouseup="blubDragOff(evt)" onmousemove="dragBlub(evt)"/>
	<g id="sproings"/>
	<g id="blubs"/>
	<g id="categories" text-anchor="left" font-family="'Trebuchet MS', sans-serif" font-size="18">
		<text x="30" y="26"><a xlink:href="worldmap.svgz" id="region" style="fill:#e09000;font-weight:bold;font-size:22;">*</a> [English]</text>
		<!-- f8bc48 d08000-->
	</g>
</svg>
