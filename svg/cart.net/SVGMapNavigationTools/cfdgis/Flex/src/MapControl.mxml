<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="200" height="600" applicationComplete="init()">
	<mx:Style  source="css/Yahoo/SkinYahoo.css"/>
	<mx:Accordion x="-0.05" y="39.95" width="200.05" height="538.9">
		<mx:Canvas label="垛位更新" width="100%" height="100%">
		</mx:Canvas>
		<mx:VBox label="车辆监控" width="100%" height="100%">
			<mx:Tree height="320" width="197" dataProvider="{dpCarTree}" labelFunction="treeLabel" id="carTree"></mx:Tree>
			<mx:Button label="地图定位" width="195" click="highLightCar(event)"/>
		</mx:VBox>
		<mx:Canvas label="堆场信息" width="100%" height="100%">
			<mx:DataGrid x="0" y="27" width="198" height="211" id="stackDataGrid" dataProvider="{dpstack}" itemClick="selectStack(event)">
				<mx:columns>
					<mx:DataGridColumn headerText="区域" dataField="STOW_NAME" width="85" sortable="false" resizable="true"/>
					<mx:DataGridColumn headerText="船商" dataField="BOAT_NAME" sortable="true"/>
					<mx:DataGridColumn headerText="ID" dataField="STOWid" visible="false"/>					
					<mx:DataGridColumn headerText="客户" dataField="COUSTOMER_NAME" visible="false"/>					
					<mx:DataGridColumn headerText="客户1" dataField="COUSTOMER_NAME1" visible="false"/>					
					<mx:DataGridColumn headerText="货物" dataField="GOODS_NAME"/>					
				</mx:columns>
			</mx:DataGrid>
			<mx:TextInput x="38" y="244" text="Text" width="142" id="txtSTOWid"/>
			<mx:Label x="2" y="270" text="区域："/>
			<mx:Label x="2" y="296" text="船商："/>
			<mx:Label x="2" y="348" text="货物："/>
			<mx:Label x="2" y="322" text="客户："/>
			<mx:Label x="2" y="244" text="ID：" width="35"/>
			<mx:Label x="87" y="322" text="客户1："/>
			<mx:Button x="38" y="378" label="地图定位" width="83" height="18" click="highLightStack(event)"/>
			<mx:Button x="129" y="378" label="保存" width="51" height="18" id="stackSave" click="updateStackArea()"/>
			<mx:TextInput x="38" y="270" text="Text" width="142" id="txtSTOW_NAME"/>
			<mx:TextInput x="38" y="296" text="Text" width="91" id="txtBOAT_NAME"/>
			<mx:TextInput x="38" y="322" text="Text" width="50" id="txtCOUSTOMER_NAME"/>
			<mx:TextInput x="38" y="348" text="Text" id="txtGOODS_NAME" width="142"/>
			<mx:TextInput x="126" y="322" text="Text" width="54" id="txtCOUSTOMER_NAME1"/>
			<mx:TextInput x="0" y="3" width="143" editable="true" id="txtStackFilter" change="refreshStack()" text="{strFilter}" enabled="true"/>
		</mx:Canvas>
		<mx:Canvas label="车辆轨迹回放" width="100%" height="100%">
			<mx:Button x="21" y="310" label="Button"/>
			<mx:Button x="105" y="310" label="Button"/>
			<mx:Label x="32" y="34" text="Label"/>
			<mx:Text x="87" y="34" text="Text" width="94"/>
			<mx:Label x="32" y="60" text="Label"/>
			<mx:Text x="87" y="60" text="Text" width="94"/>
			<mx:Label x="32" y="86" text="Label"/>
			<mx:Text x="87" y="86" text="Text" width="94"/>
			<mx:Label x="32" y="112" text="Label"/>
			<mx:Text x="87" y="112" text="Text" width="94"/>
			<mx:Label x="32" y="138" text="Label"/>
			<mx:Text x="87" y="138" text="Text" width="94"/>
		</mx:Canvas>
		<mx:VBox label="通讯" width="100%" height="100%">
			<mx:List width="193.0303" height="411" id="logList" dataProvider="{logdp}">
			</mx:List>
		</mx:VBox>
	</mx:Accordion>
	<mx:Button label="39" width="48" x="4" y="7" click="highLightObject('39')"/>
	<mx:Button label="Button" width="38" x="56" y="7"/>
	<mx:Button label="Button" width="38" x="148" y="7"/>
	<mx:Button label="Button" width="38" x="102" y="7"/>

    <mx:ArrayCollection id="logdp">
    </mx:ArrayCollection>
	
	<mx:ArrayCollection id="dpstack" filterFunction="stackFilter">
	</mx:ArrayCollection>
	<mx:Script>
		<![CDATA[
			import flash.external.ExternalInterface;
			import mx.collections.XMLListCollection;
			import mx.collections.ArrayCollection;
            
            private var loader:URLLoader;
            
           	[Bindable]
			private var carDemoData:XML = 
			   <list>
			     <type name="Finance" code="200">
			         <car name="John H" code=""/> 
			         <car name="Sam K" code=""/>
			     </type>
			     <type name="Operations" code="400"> 
			         <car name="Bill C" code=""/>
			         <car name="Jill W" code=""/>
			     </type>                   
			   </list>;			
           	[Bindable] 
            private var dpCarTree:XMLListCollection = new XMLListCollection(carDemoData.type);
            
            [Bindable]
            private var strFilter:String = "A";       
            private function treeLabel(item:Object):String
            { 
                var node:XML = XML(item);
                return node.@name;
            }            		
			private function init():void
			{
				// 声明HTML Javascript可调用的函数,必须在浏览器中运行
				if (ExternalInterface.available) {
                    logdp.addItem({label:"测试JS-可用",url:"可用"});
					ExternalInterface.addCallback("notifySWF",notifySWF);
                 } else {
                    logdp.addItem({label:"测试JS-不可用",url:"不可用"});
                 }
				
				//获取车辆信息
				var urlCar:URLRequest = new URLRequest("http://localhost/SVGMapNavigationTools/cfdgis/php/getCarTreeXML.php");
				loader = new URLLoader(urlCar);
				loader.dataFormat = "xml";
				loader.addEventListener(Event.COMPLETE, refreshCarTree);
				
				//获取垛位信息
				var urlStack:URLRequest = new URLRequest("http://localhost/SVGMapNavigationTools/cfdgis/php/getStackXML.php");
				loader = new URLLoader(urlStack);
				loader.dataFormat = "xml";
				loader.addEventListener(Event.COMPLETE, refreshStackGrid);
				
				//logdp.removeAll();
				 //dpstack.filterFunction = stackFilter;
			}
			
			private function refreshCarTree(evt:Event):void
			{
				var list:XML = new XML(evt.target.data);
				dpCarTree = new XMLListCollection(list.type);
			}
			
			private function refreshStackGrid(evt:Event):void
			{
				var xml1:XML = new XML(evt.target.data);
				var stacklist:XMLList = xml1.stack;
				var item:XML;
            	for each(item in stacklist) {
					dpstack.addItem(
						{	"STOWid":item.@STOWid.toString(),
							"STOW_NAME":item.@STOW_NAME.toString(),
							"BOAT_NAME":item.@BOAT_NAME.toString(),
							"COUSTOMER_NAME":item.@COUSTOMER_NAME.toString(),
							"COUSTOMER_NAME1":item.@COUSTOMER_NAME1.toString(),
							"GOODS_NAME":item.@GOODS_NAME.toString()
						});
            	}
   			}
   			
   			private function selectStack(event:Event):void
   			{
   				txtSTOWid.text = event.currentTarget.selectedItem.STOWid;
   				txtSTOW_NAME.text = event.currentTarget.selectedItem.STOW_NAME;
   				txtBOAT_NAME.text = event.currentTarget.selectedItem.BOAT_NAME;
   				txtCOUSTOMER_NAME.text = event.currentTarget.selectedItem.COUSTOMER_NAME;
   				txtCOUSTOMER_NAME1.text = event.currentTarget.selectedItem.COUSTOMER_NAME1;
   				txtGOODS_NAME.text = event.currentTarget.selectedItem.GOODS_NAME;   				   				
   				
   			}
   			private function stackFilter(item:Object):Boolean {
   				if(strFilter == "") return true;
   				var str:String= new String(item.STOW_NAME);
   				if(str.indexOf(strFilter) == -1) 
   					return false;
   				else 
   					return true;
   				
   			}
   			
   			private function refreshStack():void
   			{
   				strFilter=txtStackFilter.text;
   				dpstack.refresh();

   			}
   			private function highLightCar(evt:Event):void
   			{
   				highLightObject(XML(carTree.selectedItem).@code);
   			}   			
   			private function highLightStack(evt:Event):void
   			{
   				highLightObject(txtSTOWid.text);
   			}
			private function highLightObject(objectid:String):void
			{
   				logdp.addItem({label:objectid,url:"123"});
				ExternalInterface.call("highLightObject", objectid); 
			}
			
			private function notifySWF(type:String, msg:String):void{
				logdp.addItem({label:type+"["+msg+"]",url:msg});
			}
			
			private function updateStackArea()
			{
	            var url:String = "http://localhost/SVGMapNavigationTools/cfdgis/php/updateStackArea.php";
	            //?uSTOWid=121637308243286&uStackArea=A%C7%F8(970,1040)
	            var variables:URLVariables = new URLVariables();
	            variables.uSTOWid = txtSTOWid.text;
	            variables.uStackArea = txtSTOW_NAME.text;
	            
	            var request:URLRequest = new URLRequest(url);
	            request.data = variables;
	            try {            
	                navigateToURL(request,"_blank");
	            }
	            catch (e:Error) {
	                // handle error here
	            }

			}
		]]>
	</mx:Script>
	
</mx:Application>
