数据库运行错误,找不到原因,帮一帮忙.帮我找出来.谢谢大家

var moveStep = 50;
var svgDoc;
var svgRoot;
var zoomLevel = 3;
var viewbox;
var viewboxBegin = "0 0 406 510";
var coords;
var newPos;
var texte;
var item_selected = "";
var texte;
var xbegin = 0;
var ybegin = 0;
var svgid = new Array();
var pfada = new Array();
var pfadb = new Array();

// zoom in
function zoomIn(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
var viewbox = svgRoot.getAttribute("viewBox");
var coords = viewbox.split(/ /);
if (zoomLevel >= 1) {
zoomLevel -= 1;
for (var i = 0; i < coords.length; i++) {
coords[i] *= 0.8;
}
if (xbegin > 0 && ybegin > 0) {
coords[0] = xbegin - coords[2]/2;
coords[1] = ybegin - coords[3]/2;
}
svgRoot.setAttribute("viewBox", coords.join(" "));
}
}

// zoom out
function zoomOut(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
var viewbox = svgRoot.getAttribute("viewBox");
var coords = viewbox.split(/ /);
if (zoomLevel <= 5) {
zoomLevel += 1;
for (var i = 0; i < coords.length; i++) {
coords[i] /= 0.8;
}
if (xbegin > 0 && ybegin > 0) {
coords[0] = xbegin - coords[2]/2;
coords[1] = ybegin - coords[3]/2;
}
svgRoot.setAttribute("viewBox", coords.join(" "));
}
}

// zoom to original view
function zoomOrig(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
zoomLevel = 3;
svgRoot.setAttribute("viewBox", viewboxBegin);
xbegin = 0;
ybegin = 0;
}

// move right
function moveRight(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
viewbox = svgRoot.getAttribute("viewBox");
coords = viewbox.split(/ /);
newPos = parseInt(coords[0]) + parseInt(moveStep);
coords[0] = newPos;
svgRoot.setAttribute("viewBox", coords.join(" "));
}

// move left
function moveLeft(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
viewbox = svgRoot.getAttribute("viewBox");
coords = viewbox.split(/ /);
newPos = parseInt(coords[0]) - parseInt(moveStep);
coords[0] = newPos;
svgRoot.setAttribute("viewBox", coords.join(" "));
}

// move up
function moveUp(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
viewbox = svgRoot.getAttribute("viewBox");
coords = viewbox.split(/ /);
newPos = parseInt(coords[1]) - parseInt(moveStep);
coords[1] = newPos;
svgRoot.setAttribute("viewBox", coords.join(" "));
}

// move down
function moveDown(obj) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
viewbox = svgRoot.getAttribute("viewBox");
coords = viewbox.split(/ /);
newPos = parseInt(coords[1]) + parseInt(moveStep);
coords[1] = newPos;
svgRoot.setAttribute("viewBox", coords.join(" "));
}

// Bei gefundenen Texten Kreis zeichnen und Legende markieren
function kreis(x,y,textnr,teil,objekt) {
xbegin = x;
ybegin = y;
var cir = svgDoc.createElement('circle');
cir.setAttribute('id', 'marker');
cir.setAttribute('cx', x + 5);
cir.setAttribute('cy', y - 2);
cir.setAttribute('r', 20);
cir.setAttribute('fill-opacity', '0.35');
cir.setAttribute('fill', '#5F9AFF');
cir.setAttribute('stroke-opacity', 1.0);
cir.setAttribute('stroke', 'black');
var parent = texte.item(textnr).getParentNode();
parent.appendChild(cir);
//Bauteil im HTML- Dokument markieren;
var obj_id = teil;
obj_id = obj_id.concat(objekt);
var DHTMLobj = document.all.item(obj_id);
if (DHTMLobj != null && DHTMLobj.style != null) {
DHTMLobj.style.backgroundColor = "#5F9AFF";
DHTMLobj.style.fontWeight = "bolder";
item_selected = obj_id;
}
}

// Texte finden;
function finde(obj, bauteil) {
var afindtext = new Array();
var afindx = new Array();
var afindy = new Array();
var afindi = new Array();
var bfindtext = new Array();
var bfindx = new Array();
var bfindy = new Array();
var bfindi = new Array();
var abfindtext = new Array();
var abfindx = new Array();
var abfindy = new Array();
var abfindi = new Array();
var teila = "";
var teilb = "";
var numa = 0;
var numb = 0;
var numab = 0;
var varianzx = 15;
var varianzy = 2;

if (obj != '' && obj != null && bauteil != '' && bauteil != null) {
svgDoc = document.getElementById(obj).getSVGDocument();
svgRoot = svgDoc.rootElement;
texte = svgRoot.getElementsByTagName('text');
if (item_selected != "") {
var DHTMLobj = document.all.item(item_selected);
if (DHTMLobj != null && DHTMLobj.style != null) {
DHTMLobj.style.backgroundColor = "white";
DHTMLobj.style.fontWeight = "normal";
}
}
var mark = svgDoc.getElementById('marker');
while (mark != null) {
var par = mark.getParentNode();
par.removeChild(mark);
mark = svgDoc.getElementById('marker');
}
nr = 0;
while (isNaN(bauteil.charAt(nr))) {
nr = nr + 1;
}
if (bauteil.indexOf('.') > -1) {
nr = bauteil.indexOf('.');
}
teila = bauteil.substring(0,nr);
teilb = bauteil.replace(teila,"");
var afind = false;
var bfind = false;
var abfind = false;
for (var i = 0; i < texte.length; i++) {
var tx = texte.item(i).getFirstChild().getNodeValue();
tx = tx.replace(/\n/g, "");
var stelle = tx.indexOf("/");
if (stelle > -1) {
var tx_neu = tx.substring(0, stelle);
tx = tx_neu;
}
if (tx == teila && teila != "") {
afind = true;
afindtext[numa] = tx;
afindx[numa] = texte.item(i).getAttribute('x');
afindy[numa] = texte.item(i).getAttribute('y');
afindx[numa] *= 1;
afindy[numa] *= 1;
afindx[numa] = Math.round(afindx[numa]);
afindy[numa] = Math.round(afindy[numa]);
afindi[numa] = i;
numa = numa + 1;
}
if (tx == teilb && teilb != "") {
bfind = true;
bfindtext[numb] = tx;
bfindx[numb] = texte.item(i).getAttribute('x');
bfindy[numb] = texte.item(i).getAttribute('y');
bfindx[numb] *= 1;
bfindy[numb] *= 1;
bfindx[numb] = Math.round(bfindx[numb]);
bfindy[numb] = Math.round(bfindy[numb]);
bfindi[numb] = i;
numb = numb + 1;
}
if (tx == teila.concat(teilb)) {
abfind = true;
abfindtext[numab] = tx;
abfindx[numab] = texte.item(i).getAttribute('x');
abfindy[numab] = texte.item(i).getAttribute('y');
abfindx[numab] *= 1;
abfindy[numab] *= 1;
abfindx[numab] = Math.round(abfindx[numab]);
abfindy[numab] = Math.round(abfindy[numab]);
abfindi[numab] = i;
numab = numab + 1;
}
}
if (abfind) {
for (numab = 0; numab < abfindtext.length; numab++) {
kreis(abfindx[numab],abfindy[numab],abfindi[numab],bauteil,obj)
}
}
if (!abfind && afind && teilb == "") {
for (numa = 0; numa < afindtext.length; numa++) {
kreis(afindx[numa],afindy[numa],afindi[numa],bauteil,obj)
}
}
if (!abfind && bfind && teila == "") {
for (numb = 0; numb < bfindtext.length; numb++) {
kreis(bfindx[numb],bfindy[numb],bfindi[numb],bauteil,obj)
}
}
if (afind && bfind) {
for (numa = 0; numa < afindtext.length; numa++) {
for (numb = 0; numb < bfindtext.length; numb++) {
if (afindy[numa] < bfindy[numb] + varianzy && afindy[numa] > bfindy[numb] - varianzy && afindx[numa] < bfindx[numb] + varianzx && afindx[numa] > bfindx[numb] - varianzx) {
kreis(afindx[numa],afindy[numa],afindi[numa],bauteil,obj)
}
}
}
}
}
}

function over(id) {
var DHTMLobj = document.all.item(id);
if (DHTMLobj != null && DHTMLobj.style != null) {
DHTMLobj.style.color = "blue";
DHTMLobj.style.textDecoration = "underline";
DHTMLobj.style.cursor = "hand";
}
return true;
}

function out(id) {
var DHTMLobj = document.all.item(id);
if (DHTMLobj != null && DHTMLobj.style != null) {
DHTMLobj.style.color = "black";
DHTMLobj.style.textDecoration = "none";
DHTMLobj.style.cursor = "auto";
}
return true;
}

function Init(evt) {
var max=document.getElementsByName("SLP_EXPLO").length;
max *= 1;
svgid.length = max;
pfada.length = max;
pfadb.length = max;
var pfad = 1;
for (var nr = 0; nr < max; nr++) {
var svgdocs = document.getElementsByName("SLP_EXPLO")[nr].getSVGDocument(); ---------------错误就是这里,我不知道这里有什么错误
svgid[nr] = document.getElementsByName("SLP_EXPLO")[nr].id;
pfada[nr] = pfad;
pfadb[nr] = pfad + 13;
pfad = pfad + 14;
}
}

function gettext(evt) {
var text=evt.getTarget();
var svgdoc=text.getOwnerDocument();
var ziel=text.getFirstChild().nodeValue;
ziel = ziel.replace(/\n/g, "");
ziel *= 1;
for (var i = 0; i < svgid.length; i++) {
if (ziel != '' && ziel >= pfada[i] && ziel <= pfadb[i]) {
lasttarget = i;
document.getElementById(svgid[i]).scrollIntoView();
svgDoc = document.getElementById(svgid[i]).getSVGDocument();
svgRoot = svgDoc.rootElement;
texte = svgRoot.getElementsByTagName('text');
for (var nr = 0; nr < texte.length; nr++) {
var y = texte.item(nr).getAttribute('y');
var x = texte.item(nr).getAttribute('x');
x *= 1;
y *= 1;
if (y >= 490) {
var tx = texte.item(nr).getFirstChild().getNodeValue();
tx = tx.replace(/\n/g, "");
tx *= 1;
if (ziel == tx) {
var viewbox = svgRoot.getAttribute("viewBox");
var view = viewbox.split(/ /);
var rec = svgDoc.createElement('rect');
rec.setAttribute('id', 'ziel');
rec.setAttribute('x', x - 2);
rec.setAttribute('y', 0);
rec.setAttribute('width', 12);
rec.setAttribute('height', view[3]);
rec.setAttribute('fill-opacity', '0.25');
rec.setAttribute('fill', '#009966');
rec.setAttribute('stroke', 'none');
rec.addEventListener("click",del,false);
var parent = texte.item(nr).getParentNode();
parent.appendChild(rec);
}
}
}
}
}
}

function del(evt) {
var ziel=evt.getTarget();
var svgdoc=ziel.getOwnerDocument();
var mark = svgdoc.getElementById('ziel');
while (mark != null) {
var par = mark.getParentNode();
par.removeChild(mark);
mark = svgDoc.getElementById('ziel');
}
}

function mark(evt) {
var ziel=evt.getTarget();
var svgdoc=ziel.getOwnerDocument();
ziel.setAttribute('style', 'font-size:11px;letter-spacing:0;fill:#00C;opacity:1.0;');
var xziel = ziel.getAttribute('x');
var yziel = ziel.getAttribute('y');
xziel *= 1;
yziel *= 1;
xziel = xziel - 5;
yziel = yziel - 13;
xziel += "";
yziel += "";
var ttrelem=svgdoc.getElementById("ttr");
ttrelem.setAttribute("x",xziel);
ttrelem.setAttribute("y",yziel);
ttrelem.setAttribute("style","fill: #FFC; stroke: #000; stroke-width: 0.5px;visibility: visible; opacity:1.0;");
}

function demark(evt) {
var ziel=evt.getTarget();
var svgdoc=ziel.getOwnerDocument();
ziel.setAttribute('style', 'fill:#000;font-size:6;letter-spacing:0;font-weight:bold;opacity:0.1;');
var ttrelem=svgdoc.getElementById("ttr");
ttrelem.setAttribute("style","visibility: hidden");