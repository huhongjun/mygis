<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd" [
<!ATTLIST svg
	xmlns:attrib CDATA #IMPLIED
	xmlns:batik CDATA #IMPLIED
>
<!ATTLIST g
	batik:static CDATA #IMPLIED
>
<!ATTLIST image
	batik:static CDATA #IMPLIED
>
<!ATTLIST path
	batik:static CDATA #IMPLIED
>
]>
<svg width="100%" height="100%" viewBox="0 0 1024 768" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:attrib="http://www.carto.net/attrib" xmlns:batik="http://xml.apache.org/batik/ext" onload="init(evt);" zoomAndPan="disable">
	<!-- extern Javascript-->
	<script type="text/ecmascript" xlink:href="javascript/ENlang.js"/>
	<script type="text/ecmascript" xlink:href="javascript/helper_functions.js"/>
	<script type="text/ecmascript" xlink:href="javascript/mapApp.js"/>
	<script type="text/ecmascript" xlink:href="javascript/timer.js"/>
	<script type="text/ecmascript" xlink:href="javascript/slider.js"/>
	<script type="text/ecmascript" xlink:href="javascript/button.js"/>
	<script type="text/ecmascript" xlink:href="javascript/checkbox_and_radiobutton.js"/>
	<script type="text/ecmascript" xlink:href="javascript/navigation.js"/>
               <script type="text/ecmascript" xlink:href="javascript/GPSTime.js"/>
	<script type="text/ecmascript" xlink:href="javascript/MouseEffects.js"/>
  	//--------------------------------------------------------------------------------------------------
 	//intern Javascriptcode
  	//--------------------------------------------------------------------------------------------------
  	<script type="text/ecmascript"><![CDATA[
		//global variables for mapApp and map object
		var myMapApp = new mapApp(false,undefined);
		var myMainMap;
		//GPS-DATA  PHP to Javascript
		var bbox = "780349,163192,791558,170411";
		var session_id = "1878020034494dcd3818e96"; //Session Id
		var GPShdiff = "917";
		var GPSdistance = "13.74";
		var GPShmin = "1954"; //Min. altitude
		var GPShmax = "2871"; //Max. altitude 
		var GPSname = "GPS TOUR 421 Michael"; //Name of GPS Track
	  	var GPSpoints = "692";//Number GPS Points
 		var GPSbegin = "21_17_30_03_2007"; //Date TrackStart
    		var GPSend = "21_17_30_03_2007"; //Date Track End
		var GPSdur = "unknown"; // Track Time Duration

		//Path to XML-Fragments
		var GPSTrackFile = session_id+"path.xml"; //XML-Fragment Path (GPS-Track as one Path-Segment)
    		var GPSTrackLineFile = session_id+"track.xml"; //XML-Fragment Track (GPS-Track as many Line-Segments)
    		var ProfileFile = session_id+"profile.xml"; //XML-Fragment Profile
    		var HoehenlinieFile = session_id+"hoehenlinie.xml"; //XML-Fragment Line (Elevation Lines)
    		var HoehenzahlFile = session_id+"hoehenzahl.xml"; //XML-Fragment Number (Altitude Elevation Lines)
    		var RectFile = session_id+"rect.xml"; //Rect -->Area for Mouseover Effects
    		var ClipFile = session_id+"clip.xml"; 
		var widthEle = parseInt(GPSdistance*1000);
    		//6 % Zusatz bei Breite, wegen Hoehenlinienzahlen
    		var zusatz =(widthEle/100)*6;
    		var widthEle =widthEle+zusatz;
    		//alert(widthEle); 
    		var heightEle = widthEle/3.75; //750:200=3.75
    		//var yEle = -(heightEle+parseInt(GPShmin)-200);
    		//calculate vertical exaggeration
    		var stretchEle = Math.round(heightEle/parseInt(GPShdiff))-1;//strechfactor scale(1 -?)    
    
    		//vertical exaggeration max. 6x  
		if (stretchEle > 6 )
		{
 		  //vertical exaggeration >6 set stretchEle=6
		  stretchEle=6;
		}

 	   	//set scalefactor elevation profile
    		var scalefactor='scale(1 '+(-stretchEle)+')';
    		var yEle = -((stretchEle*parseInt(GPShmin))+heightEle-(stretchEle*50));
		//set viewBox for elevation profile
    		var viewBoxEle = '0 '+yEle+' '+widthEle+' '+heightEle;    

		
  //--------------------------------------------------------------------------------------------------
  //SVG onload function
  //--------------------------------------------------------------------------------------------------
    function init(evt) {
			//dynamic layer array that allow loading from database
			var dynamicLayers = new Array();
			//initialize digiLayers (layers that allow digitizing)
			var digiLayers = new Array();
			//define some styles for the map object
			var zoomRectStyles = {"fill":"none","stroke":"crimson","stroke-width":0.002,"stroke-dasharray":"0.012,0.002"};
			var highlightStyles = {"stroke":"crimson","stroke-width":0.002};
			var dragRectStyles = {"fill":"darkblue","fill-opacity":0.5};
			
			//initialize myMainMap object, you need to adopt the parameters here
			myMainMap = new map("mainMap",354000,354,0.5,0,26911,"m",1,true,"coordX","coordY",dynamicLayers,digiLayers,"",zoomRectStyles,highlightStyles,dragRectStyles,"referenceMap","myDragCrossSymbol",10000);
			//create zoom slider
			//zoom slider styles
                    var sliderStyles={"stroke":"dimgrey","stroke-width":1.5};
			myMapApp.zoomSlider = new slider("mapZoomSlider","mapZoomSlider",1010,210,myMainMap.minWidth,1010,291,myMainMap.maxWidth,myMainMap.maxWidth,sliderStyles,10,"sliderSymbol",myMapApp.refMapDragger,true);

			//now initialize buttons
			myMapApp.buttons = new Array();
		       //button styles, adopt the style settings to match your needs
			var buttonTextStyles = {"font-family":"Arial,Helvetica,sans-serif","fill":"white","font-size":10};
			var buttonStyles = {"fill":"url(#verlauf)","rx":"3","ry":"3"};
			var shadeLightStyles = {"fill":"rgb(235,235,235)","rx":"3","ry":"3"};
			var shadeDarkStyles = {"fill":"black","rx":"3","ry":"3"};

      			//button instance creation
			//groupId,functionToCall,buttonType,buttonText,buttonSymbolId,x,y,width,height,textStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,shadowOffset
      			myMapApp.buttons["zoomIn"] = new button("zoomIn","zoomIn",zoomImageButtons,"rect",undefined,"magnifyerZoomIn",1000,184,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["zoomOut"] = new button("zoomOut","zoomOut",zoomImageButtons,"rect",undefined,"magnifyerZoomOut",1000,296,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["infoButton"] = new switchbutton("infoButton","infoButton",zoomImageSwitchButtons,"rect",undefined,"infoBut",790,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["infoButton"].setSwitchValue(true,false);
			statusChange("Mode: Infomode");
			myMapApp.buttons["zoomFull"] = new button("zoomFull","zoomFull",zoomImageButtons,"rect",undefined,"magnifyerFull",815,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["zoomManual"] = new switchbutton("zoomManual","zoomManual",zoomImageSwitchButtons,"rect",undefined,"magnifyerManual",840,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["panManual"] = new switchbutton("panManual","panManual",zoomImageSwitchButtons,"rect",undefined,"symbPan",865,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["recenterMap"] = new switchbutton("recenterMap","recenterMap",zoomImageSwitchButtons,"rect",undefined,"symbRecenter",890,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["backwardExtent"] = new button("backwardExtent","backwardExtent",zoomImageButtons,"rect",undefined,"symbArrowLeft",915,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["forwardExtent"] = new button("forwardExtent","forwardExtent",zoomImageButtons,"rect",undefined,"symbArrowRight",940,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			//Button add 
			myMapApp.buttons["help"] = new button("help","help",undefined,"rect",undefined,"symbQuestionMark",965,105,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);
			myMapApp.buttons["pdf"] = new button("pdf","pdf",undefined,"rect",undefined,"symbPdfCreate",790,592,20,20,buttonTextStyles,buttonStyles,shadeLightStyles,shadeDarkStyles,1);

			//see if we need to disable buttons
			myMainMap.checkButtons();
			
			//create checkbox array
			myMapApp.checkBoxes = new Array();
			//labeltext styles
			var labeltextStyles = {"font-family":"Arial,Helvetica,sans-serif","font-weight":"bold","fill":"dimgray","font-size":12};

      			//create individual checkboxes
      			//Layers
      			myMapApp.checkBoxes["backgroundImage"] = new checkBox("backgroundImage","checkBoxes",205,140,"checkBoxRect","checkBoxCross",true,"Topographic Map",labeltextStyles,10,6,undefined,toggleMapLayer);
			myMapApp.checkBoxes["mytrackGroup"] = new checkBox("mytrackGroup","checkBoxes",205,160,"checkBoxRect","checkBoxCross",true,"GPS Track",labeltextStyles,10,6,undefined,toggleMapLayer);   
			
			// set viewbox of main map (and the zoomslider and rect in the reference map) to the extent of the url coordinates (only for the first time)
			var bbox_coord = bbox.split(",");
			var new_vb = calcSVGViewbox(bbox);
			var new_vb_coord = new_vb.split(" ");
			// setNewViewBox() immer nur outside of loadProjectSpecific nutzen!!!!
			myMainMap.setNewViewBox(parseFloat(bbox_coord[0]),parseFloat(bbox_coord[1]),parseFloat(bbox_coord[2]),(parseFloat(bbox_coord[1])+(parseFloat(new_vb_coord[2])/750*483)),false);
			var mapUrl="http://www.geofoto.ch/cgi/mapserv?map=/home/an/mapserverdata/relief_u_pk_kombi/relief_u_pk_kombi_jpeg.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&LAYERS=pk_kombi,Watermark&SRS=EPSG:21781&BBOX="+bbox+"&width=750&height=483&format=image/jpeg";
			var bg_image = document.getElementById("backgroundImage");
			bg_image.setAttributeNS(null,"x",new_vb_coord[0]);
			bg_image.setAttributeNS(null,"y",new_vb_coord[1]);
			bg_image.setAttributeNS(null,"width",new_vb_coord[2]);
			bg_image.setAttributeNS(null,"height",parseFloat(new_vb_coord[2])/750*483);
			bg_image.setAttributeNS(xlinkNS,"href",mapUrl);
			
      //--------------------------------------------------------------------------------------------------
      //Create GPS Track Infos
      //--------------------------------------------------------------------------------------------------
	    		// GPS Name
      			var tr_name = document.getElementById("trackname").firstChild;
  	  		tr_name.appendData(GPSname);

      			//GPS Start time
 	    		var GPSbeginNew=timeNewFormat('EN',GPSbegin); //change format
	    		var tr_start = document.getElementById('trackstart').firstChild;
	   		tr_start.appendData(GPSbeginNew);

      			//GPS End time
	    		var GPSendNew=timeNewFormat('EN',GPSend); //change format
	    		var tr_end = document.getElementById('trackend').firstChild;
	    		tr_end.appendData(GPSendNew);

      			//Time  duration   
      			var tr_dur = document.getElementById('trackdur').firstChild;
	    		tr_dur.appendData(GPSdur);

	    		//max height
      			var tr_hmax = document.getElementById('trackmax').firstChild;
	    		tr_hmax.appendData(GPShmax+' m');

	    		//min height
      			var tr_hmin = document.getElementById('trackmin').firstChild;
	    		tr_hmin.appendData(GPShmin+' m');

	    		// difference height
     			var tr_diff = document.getElementById('trackdiff').firstChild;
  	  		tr_diff.appendData(GPShdiff+' m');

	    		//length track
      			var tr_length = document.getElementById('tracklength').firstChild;
	    		tr_length.appendData(GPSdistance+' km');

      			//vertical exaggeration
	    		var tr_profile_stretch = document.getElementById('hight2length').firstChild;
	    		tr_profile_stretch.appendData(stretchEle+'x');
      
      			//write viewBox elevation profile
 	   		var vBoxElevation = document.getElementById("elevationProfile");
	    		vBoxElevation.setAttributeNS(null,"viewBox",viewBoxEle);
      
      			//write scalefactor elevation profile
	    		var scaleGroupY = document.getElementById('gps_profile');
	    		scaleGroupY.setAttributeNS(null,"transform",scalefactor);

	//--------------------------------------------------------------------------------------------------
      	//LOAD SVG-Fragment
      	//--------------------------------------------------------------------------------------------------
             
      			var urlTrack = "tracks/"+GPSTrackFile; //XML-Fragment Path (GPS-Track as one Path-Segment)
      			var GPSTrack = new getData(urlTrack,callbackGPS,'xml','get',undefined,undefined);
      			GPSTrack.getData();

      			var urlTrackLine = "tracks/"+GPSTrackLineFile;//XML-Fragment Track (GPS-Track as many Line-Segments)
      			var GPSTrackLine = new getData(urlTrackLine,callbackGPSLine,'xml','get',undefined,undefined);
      			GPSTrackLine.getData();
	
      			var urlClip = "profiles/"+ClipFile;//XML-Fragment for Clip
      			var ClipProfile = new getData(urlClip,callbackClip,'xml','get',undefined,undefined);
      			ClipProfile.getData();
      
      			var urlProfile = "profiles/"+ProfileFile;//XML-Fragment for Profile-Line
      			var GPSProfile = new getData(urlProfile,callbackProfile,'xml','get',undefined,undefined);
      			GPSProfile.getData();
      
      			var urlHoehenlinie = "profiles/"+HoehenlinieFile;//XML-Fragment Line (Elevation Lines)
      			var LinieProfile = new getData(urlHoehenlinie,callbackLinie,'xml','get',undefined,undefined);
      			LinieProfile.getData();

     			var urlRect = "profiles/"+RectFile;//XML-Fragment Rect -->Area for Mouseover Effects
      			var RectProfile = new getData(urlRect,callbackRect,'xml','get',undefined,undefined);
      			RectProfile.getData();
      
      			var urlHoehenzahl = "profiles/"+HoehenzahlFile;//XML-Fragment Number (Altitude Elevation Lines)
      			var ZahlProfile = new getData(urlHoehenzahl,callbackZahl,'xml','get',undefined,undefined);
      			ZahlProfile.getData();
     
     			//XML-Fragment coloured zones for height (interval 200m)
      			var StufenProfile = new getData("stufe.xml",callbackStufe,'xml','get',undefined,undefined);
      			StufenProfile.getData();
				
                                            // fix ASV 6 bug (doesn't open hyperlink in new window with target="_blank")
                                            fixLinksAsv();
                                            
			//load function specific to the current map project
			loadProjectSpecific();
		}
		
                  // @ thanks to Bruce Rindahl for this piece of code
                   var isAsv = false;
                  if(typeof(window.getSVGViewerVersion) != "undefined")
                  {
						   isAsv = true;
                  }

                  // @ thanks to Bruce Rindahl for this piece of code
                  function openNewWindow(url)
                  {
                           if(!window.top || !window.top.open(url))
                           {
                                  // error handling
	                alert("Couldn't open '" + url + "' in a new window!");
                           }
                   }
	
                  // @ thanks to Bruce Rindahl for this piece of code
                  // ASV-specific hack, as it doesn't support opening links in new windows
                  // (apparently a security "feature")
                  function fixLinksAsv()
                  {
                           if(isAsv)
                           {
                                      var linkList = document.getElementsByTagName("a");

									  var current, original;
	                       for(var i = 0, j = linkList.length; i < j; i++)
	                       {
	                            current = linkList.item(i);
	                            // check for both target="_blank" and target="blank" (for xlink:show="new": (current.getAttributeNS("http://www.w3.org/1999/xlink", "show") == "new") )
	                            if( (current.getAttributeNS(null, "target") == "blank") || (current.getAttributeNS(null, "target") == "_blank") )
	                            {
	                                  original = current.getAttributeNS("http://www.w3.org/1999/xlink", "href");

									  // refactor target to javascript call
                                                current.setAttributeNS(null, "onclick", "openNewWindow('" + original + "');");
                                                // disable original link
                                                current.removeAttributeNS("http://www.w3.org/1999/xlink", "href");
	                           }
	                      }
                           }
                  }
    
		//this function is called after each pan or zoom or change of map extent
		//you can place project specific functions here that need to react on the map extent, e.g. adopting line-widths, loading additional data, etc.
		function loadProjectSpecific() {
			//adopt width and height of map extent
			document.getElementById("myScaleTextW").firstChild.nodeValue = formatNumberString(myMainMap.curWidth.toFixed(myMainMap.nrDecimals),"") +"  "+ myMainMap.units;
			document.getElementById("myScaleTextH").firstChild.nodeValue = formatNumberString(myMainMap.curHeight.toFixed(myMainMap.nrDecimals),"") +"  "+ myMainMap.units;

			// adapt bg-image of main map to the viewbox of the main map
			// alert(document.getElementById("mainMap").getAttributeNS(null,"viewBox"));
			var map_vb = document.getElementById("mainMap").getAttributeNS(null,"viewBox");
			var map_vb_coord = map_vb.split(" ");
			
			var new_bbox = calcBbox(map_vb);
		
			var mapUrl="http://www.geofoto.ch/cgi/mapserv?map=/home/an/mapserverdata/relief_u_pk_kombi/relief_u_pk_kombi_jpeg.map&SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&LAYERS=pk_kombi,Watermark&SRS=EPSG:21781&BBOX="+new_bbox+"&width=750&height=483&format=image/jpeg";

			var bg_image = document.getElementById("backgroundImage");
			bg_image.setAttributeNS(null,"x",map_vb_coord[0]);
			bg_image.setAttributeNS(null,"y",map_vb_coord[1]);
			bg_image.setAttributeNS(null,"width",map_vb_coord[2]);
			bg_image.setAttributeNS(null,"height",map_vb_coord[3]);
			bg_image.setAttributeNS(xlinkNS,"href",mapUrl);
      
      			//connection Map width and Data attributes 	
	    		//Track
      			document.getElementById("gps_track").setAttributeNS(null,"stroke-width",map_vb_coord[2]*0.008);
  	 		document.getElementById("mytrackline").setAttributeNS(null,"stroke-width",map_vb_coord[2]*0.008);
	    		//circle Mouseover
      			document.getElementById("mycircle").setAttributeNS(null,"r",map_vb_coord[2]*0.008);
	  
		}
		
		//this function toggles the visibility of a map layer
		function toggleMapLayer(id,checkStatus,labelText) {
			var mapLayer = document.getElementById(id);
			var visibleStatus = "hidden";
			if (checkStatus) {
						visibleStatus = "visible";
					   }
			mapLayer.setAttributeNS(null,"visibility",visibleStatus);
		}
    
    //--------------------------------------------------------------------------------------------------
    //Update BackgroundImage
    //--------------------------------------------------------------------------------------------------
		function calcSVGViewbox(bbox)
		{
			var coord = bbox.split(",");//split bbox
			var mapWidth = parseFloat(coord[2])-parseFloat(coord[0]);
			var mapHeight = parseFloat(coord[3])-parseFloat(coord[1]);
			var xMin = coord[0];
			var yMin = -1*(parseFloat(coord[1])+mapHeight);
			
			var vb= xMin+" "+yMin+" "+mapWidth+" "+mapHeight;
			return vb;
		}		

		function calcBbox(vb)
		{
			var coord = vb.split(" ");
			var x1 = parseFloat(coord[0]);
			var x2 = parseFloat(coord[0])+parseFloat(coord[2]);
			var y1 = (-1*parseFloat(coord[1]))-parseFloat(coord[3]);
			var y2 = -1*parseFloat(coord[1]);
			
			var bbox= x1+","+y1+","+x2+","+y2;
			return bbox;
		}	
   
    //--------------------------------------------------------------------------------------------------
    //Callback function
    //--------------------------------------------------------------------------------------------------
    		function callbackGPS(obj)
      		{
      			var groupTrack = document.getElementById("mytrack");
      	      		//delete old Data
			while (groupTrack.hasChildNodes())
      				{
        			groupTrack.removeChild(groupTrack.firstChild);
      				}
      			// append new Data
      			groupTrack.appendChild(obj);
      		}
       
    		function callbackGPSLine(obj)
      		{
      			var groupTrackLine = document.getElementById("mytrackline");
      		       while (groupTrackLine.hasChildNodes())
      			{
        		groupTrackLine.removeChild(groupTrackLine.firstChild);
      			}
              	groupTrackLine.appendChild(obj);
      		}

    		function callbackProfile(obj)
      		{
      		var groupProfile = document.getElementById("myprofile");
      		while (groupProfile.hasChildNodes())
       		{
        		groupProfile.removeChild(groupProfile.firstChild);
        		}
      		groupProfile.appendChild(obj);
      		}
      
    		function callbackLinie(obj)
      		{
      			var groupLinie = document.getElementById("mylinie");
      			while (groupLinie.hasChildNodes())
        		{
        		groupLinie.removeChild(groupLinie.firstChild);
        		}
      		groupLinie.appendChild(obj);
      		}
    
    		//Rect
    		function callbackRect(obj)
      		{
      		var groupRect = document.getElementById("myrect");
      		while (groupRect.hasChildNodes())
        		{
        		groupRect.removeChild(groupRect.firstChild);
        		}
      		groupRect.appendChild(obj);
      		}
    
    		//Number    
    		function callbackZahl(obj)
      		{
      		var groupZahlen = document.getElementById("myzahl");
      		while (groupZahlen.hasChildNodes())
        		{
        		groupZahlen.removeChild(groupZahlen.firstChild);
       		}
      		groupZahlen.appendChild(obj);
  
      		var obere_Grenze=Math.floor(GPShmax/100);
      		var untere_Grenze=Math.ceil(GPShmin/100);
      		var dist = Math.ceil (GPSdistance);
      		var factor = dist * 14;
      		//alert(factor);
            
      		if (GPShdiff<=500)
      		{
      		for (var k=untere_Grenze; k<=obere_Grenze; k++)
        		{
        		var wert=k*100;
        		var testy =document.getElementById('hzahl'+wert).getAttributeNS(null,"y");
       		document.getElementById('hzahl'+wert).setAttributeNS(null,"y",(testy*stretchEle));
        
        		var testsize =document.getElementById('hzahl'+wert).getAttributeNS(null,"font-size");
        		document.getElementById('hzahl'+wert).setAttributeNS(null,"font-size",(factor));
        
        		}
      		}
      
      		if ((GPShdiff>500) && (GPShdiff<=1900))
      		{
      		var new_obere_Grenze = Math.floor(obere_Grenze/2);
      		var new_untere_Grenze = Math.ceil(untere_Grenze/2);
      		for (var k=new_untere_Grenze; k<=new_obere_Grenze; k++)
        	{
        	var wert=k*200;
        	var testy =document.getElementById('hzahl'+wert).getAttributeNS(null,"y");
        	document.getElementById('hzahl'+wert).setAttributeNS(null,"y",(testy*stretchEle));
        
        	var testsize =document.getElementById('hzahl'+wert).getAttributeNS(null,"font-size");
        	document.getElementById('hzahl'+wert).setAttributeNS(null,"font-size",(factor));
        	}
     		}
      
     		if (GPShdiff>1900)
      		{
      		var new_obere_Grenze = Math.floor(obere_Grenze/5);
      		var new_untere_Grenze = Math.ceil(untere_Grenze/5);
      		for (var k=new_untere_Grenze; k<=new_obere_Grenze; k++)
       		{
        		var wert=k*500;
        		var testy =document.getElementById('hzahl'+wert).getAttributeNS(null,"y");
        		document.getElementById('hzahl'+wert).setAttributeNS(null,"y",(testy*stretchEle));
           
       		var testsize =document.getElementById('hzahl'+wert).getAttributeNS(null,"font-size");
        		document.getElementById('hzahl'+wert).setAttributeNS(null,"font-size",(factor));
        		}
      		}

      		}	
    
    		//Stufe
    		function callbackStufe(obj)
      		{
      		var groupStufe = document.getElementById("mystufe");
      		while (groupStufe.hasChildNodes())
        		{
        		groupStufe.removeChild(groupStufe.firstChild);
        		}
      		groupStufe.appendChild(obj);
      		}

    		//Clip    
    		function callbackClip(obj)
     		{
      		var groupClip = document.getElementById("clipping");
      		while (groupClip.hasChildNodes())
        	{
        	groupClip.removeChild(groupClip.firstChild);
        	}
      		groupClip.appendChild(obj);
      
      
      		//After Clipping delete Features (status load)     
	    	var LoadBox = document.getElementById("LoadMap");
	    	//LoadBox.setAttributeNS(null,"fill","none");
	    	LoadBox.parentNode.removeChild(LoadBox);       
	      
	    	var LoadBoxText = document.getElementById("RectLoad");
	    	LoadBoxText.parentNode.removeChild(LoadBoxText);

	    	var LoadText = document.getElementById("Load");
	    	LoadText.parentNode.removeChild(LoadText);
      }


]]></script>

<!--DEFS-->
	<defs>
  <!-- Intern CSS Stylesheet -->
		<style type="text/css">
                <![CDATA[
                
		   .titel1	{  
				font-family:Arial,Helvetica,sans-serif;
                           	font-size:23px;
                           	font-weight:bold;
                           	fill:darkblue;
                           	}

                .titel2	{  
				font-family:Arial,Helvetica,sans-serif;
                           	font-size:12px;
                           	font-weight:bold;
                           	fill:darkblue;
                           	}


		
                .addinfos1	{  
				font-family:Arial,Helvetica,sans-serif;
                           	font-size:9px;
                           	font-weight:bold;
                           	fill:steelblue;
                           	}

		
                .addinfos2 	{  
				font-family:Arial,Helvetica,sans-serif;
                           	font-size:9px;
                           	fill:dimgray;
                          	}

		
                .navi1 		{ 
				font-family:Arial,Helvetica,sans-serif;
				font-size:17px;
                font-weight:bold;
				font-style:italic;
				fill:steelblue;  
				}

                .navi2 		{ 
				font-family:Arial,Helvetica,sans-serif;
				font-size:16px;
                           	font-weight:bold;			 	
				font-style:italic;
				fill:white;  
				}


		
                .naviRect 	{ 
				fill:white;
				fill-opacity:0.7;
 				stroke:lightskyblue;
				stroke-width:1;
				}

		
                .trackinfo	{  
				font-family:Arial,Helvetica,sans-serif;
                           	font-size:12px;
				font-weight:bold;
                           	fill:dimgray;
                           	}

		
                .triangle	{  
				fill:steelblue;
				fill-opacity:0.6;
                           	}
                        
		
                .track	{  
				stroke:red;
				stroke-width:60px;
				stroke-opacity:0.65;
				fill:none;
				pointer-events:none;
				}
  		             
		.prof	{  	
				font-family:Arial,Helvetica,sans-serif;
				font-size:9px;
                           	font-weight:bold;			 	
				fill:white;  
				}
				
                    
                ]]>
               	</style> 
     	<linearGradient id="verlauf" x1="0%" y1="0%" x2="0%" y2="100%" spreadMethod="pad">
   			<stop offset="0%" stop-color="darkblue" />
  			<stop offset="30%" stop-color="#203AAC" />
  			<stop offset="100%" stop-color="#6699FF" />
     	</linearGradient>

                
		<!-- Symbols for checkboxes -->
                
		<!-- Rect -->
              <symbol id="checkBoxRect" overflow="visible">
			<rect x="-6" y="-6" width="12" height="12" fill="url(#verlauf)" stroke="darkblue" stroke-width="1"/>
		</symbol>
		<!--Cross -->
		<symbol id="checkBoxCross" overflow="visible" fill="none" stroke="white" stroke-width="1.5" pointer-events="none">
			<line x1="-5" y1="-5" x2="5" y2="5"/>
			<line x1="-5" y1="5" x2="5" y2="-5"/>
		</symbol>

		<!-- Symbols for Zoom Magnifyer glasses -->
                
		<!-- Full Picture 100% -->
		<symbol id="magnifyerFull" overflow="visible">
			<text y="7.5" font-family="Arial,Helvetica,sans-serif" fill="white" font-size="18px" font-weight="bold" text-anchor="middle" pointer-events="none">F</text>
		</symbol>

              <!--Info-Button -->
		<symbol id="infoBut" overflow="visible">
			<circle fill="none" stroke="white" stroke-width="1.5" r="7.5" />
			<text y="5" font-family="Arial,Helvetica,sans-serif" font-size="13px" font-weight="bold" fill="white" text-anchor="middle" pointer-events="none">i</text>
		</symbol>

              <!-- Zoom manual -->
		<symbol id="magnifyerManual" overflow="visible" fill="none" stroke="white" stroke-width="1.5">
			<rect x="-6" y="-6" width="12" height="12" stroke-dasharray="1.5,1.5"/>
                        <line x1="-3" y1="0" x2="3" y2="0" />
			<line x1="0" y1="-3" x2="0" y2="3" />
		</symbol>

              <!--Zoom In-->
              <symbol id="magnifyerZoomIn" overflow="visible" fill="none" stroke="white" stroke-width="2">
			<line x1="-4" y1="0" x2="4" y2="0"/>
			<line x1="0" y1="-4" x2="0" y2="4"/>
		</symbol>

              <!-- Zoom Out -->
		<symbol id="magnifyerZoomOut" overflow="visible">
			<line x1="-4" y1="0" x2="4" y2="0" fill="none" stroke="white" stroke-width="2" />
		</symbol>

		<!-- hand symbol for panning -->
		<symbol id="symbPan" overflow="visible">
                 	<path transform="scale(1.2)" fill="none" stroke="white" stroke-width="1" d="M-2 6 C -2.2 2.5 -8.0 -0 -5.7 -1.9 C -4.3 -2.5 -3.3 -0.5 -2.5 0.7 C -3.2 -2.1 -5.5 -5.2 -3.6 -5.8 C -2.1 -6.3 -1.6 -3.6 -1.1 -1.9 C -0.9 -4.2 -1.6 -6.4 -0.2 -6.6 C 1.4 -6.8 0.9 -3 1.1 -1.9 C 1.5 -3.5 1.2 -6.1 2.5 -6.1 C 3.9 -6.1 3.5 -3.2 3.6 -1.6 C 4 -2.9 4.1 -4.3 5.3 -4.4 C 7.3 -3.5 4 2.2 3 6z"/>
		</symbol>

		<!-- Symbol for Arrows -->
		<symbol id="symbArrow" overflow="visible">
			<polyline fill="none" stroke="white" stroke-width="1" points="-3,-6 3,-6 3,1 5,1 0,7 -5,1 -3,1 -3,-5"/>
		</symbol>
              
		<!--Rotation Left -->
		<symbol id="symbArrowLeft" overflow="visible">
			<use xlink:href="#symbArrow" transform="rotate(90)" />
		</symbol>
              
		<!--Rotation Right -->
		<symbol id="symbArrowRight" overflow="visible">
			<use xlink:href="#symbArrow" transform="rotate(-90)" />
		</symbol>

		<!-- Symbol for Recentering Map -->
              <!-- Defining a new MapCenter -->
		<symbol id="symbRecenter" overflow="visible">
			<circle fill="white" cx="0" cy="0" r="1.5" pointer-events="none"/>
			<g fill="none" stroke="white" stroke-width="1.5" pointer-events="none">
                         	<line x1="-7" y1="-7" x2="-3" y2="-3"/>
				<line x1="7" y1="7" x2="3" y2="3"/>
				<line x1="-7" y1="7" x2="-3" y2="3"/>
				<line x1="7" y1="-7" x2="3" y2="-3"/>
			</g>
		</symbol>

		<!-- Symbol for Help -->		
		<symbol id="symbQuestionMark" overflow="visible">
			<text y="5" font-family="Arial,Helvetica,sans-serif" font-size="13px" font-weight="bold" fill="white" text-anchor="middle" pointer-events="none">?</text>
		</symbol>

		<!-- Symbol for creating PDF -->
		<symbol id="symbPdfCreate" overflow="visible">
			<text x="1" y="5" font-family="Arial,Helvetica,sans-serif" font-size="10px" font-weight="bold" fill="white" text-anchor="middle" pointer-events="none">PDF</text>
		</symbol>

		<!--Symbol for Slider-->
		<symbol id="sliderSymbol" overflow="visible" pointer-events="none">
			<line x1="0" y1="-5" x2="0" y2="5" fill="none" stroke="darkblue" stroke-width="5"/>
		</symbol>

		<!--Symbol for Dragging if zoomed in far-->
		<symbol id="myDragCrossSymbol" overflow="visible" stroke-width="6500" fill="none" stroke="darkblue" pointer-events="none">
			<line x1="-30000" y1="0" x2="-8500" y2="0"/>
			<line x1="30000" y1="0" x2="8500" y2="0"/>
			<line x1="0" y1="-8500" x2="0" y2="-30000"/>
			<line x1="0" y1="8500" x2="0" y2="30000"/>
                 </symbol>

		<!--Marker for Extent-Arrows-->
		<marker id="myStartArrow" overflow="visible" orient="auto">
			<polyline fill="darkblue" points="-0.5,0 8,-2 8,2"/>
		</marker>
		<marker id="myEndArrow" overflow="visible" orient="auto">
			<polyline fill="darkblue" points="0.5,0 -8,-2 -8,2"/>
		</marker>

	       <!--Symbol for circle_Profile-->
		       <symbol id="cur_circle" overflow="visible" pointer-events="none">
			<circle cx="100" cy="100" r="50" fill="orange"/>
		</symbol>
	</defs>
<title>GPS Swissualizer: Visualization of GPS Tracks with SVG</title>
<!-- this is a background rectangle that is used to ensure that the svg root element receives all mouse events, please adopt the fill attribute to match your desired background color -->
<rect x="-500" y="-500" width="3000" height="3000" stroke="none" fill="aliceblue"/>
<!--Layout-->
<rect id="Navi" x="780" y="78" width="250" height="245" fill="lightslategray" fill-opacity="0.2"/>
<rect id="Layers" x="780" y="328" width="250" height="75" fill="lightslategray" fill-opacity="0.2"/>
<rect id="GPS-Infos" x="780" y="408" width="250" height="150" fill="lightslategray" fill-opacity="0.2" />
<rect id="Export-Data" x="780" y="563" width="250" height="57" fill="lightslategray" fill-opacity="0.2" />
<text id="Export-Text" x="785" y="581" class="navi1">Exchange Data</text>
<image x="830" y="590" width="25" height="25" xlink:href="picture/SVG_Logo.png" />
<image x="887" y="590" width="25" height="25" xlink:href="picture/PDF_Logo.png" />
<image x="917" y="590" width="40" height="30" xlink:href="picture/link.png" />
<polygon points="860,600 860,606 866,603" class="triangle"/>
<polygon points="870,600 870,606 876,603" class="triangle"/>
<polygon points="880,600 880,606 886,603" class="triangle"/>
<rect id="Site-Infos" x="780" y="628" width="250" height="123" fill="lightslategray" fill-opacity="0.2" />
<rect id="Profil" x="10" y="550" width="750" height="200" fill="white" stroke="darkblue" stroke-width="1px"/>
      	
<!-- Main Map Frame -->
<svg id="mainMap" x="10" y="15" viewBox="483000 -300000 354000 228000" width="750" height="483" cursor="crosshair">
		<!-- this group is necessary for manual panning, it temporarily gets a translate transformation which is later removed on mouseup -->
		<g id="mainMapGroup" transform="translate(0,0)">
		<!-- within this group you should place all map layers, usually, if you have more than one element in a map layer, you would use a group instead of a single element, as in this example -->
		<image id="backgroundImage" x="483000" y="-300000" width="354000" height="228000" xlink:href="http://www.geofoto.ch/cgi/mapserv?map=/home/an/mapserverdata/relief_u_pk_kombi/relief_u_pk_kombi_jpeg.map&amp;SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;LAYERS=pk_kombi,Watermark&amp;SRS=EPSG:21781&amp;BBOX=483000,72000,837000,300000&amp;width=750&amp;height=483&amp;format=image/jpeg" pointer-events="none"/>
		
			<g id="mytrackGroup"> 
              		<g id="mytrackline" stroke-width="60px">
				</g>
              		<g id="mytrack" pointer-events="none">
    						<path id="gps_track" stroke="red" fill="none" stroke-width="60px" stroke-opacity="0.7" stroke-linecap="round" stroke-linejoin="round"/>
    				</g>
								
              	    
    			</g>

  		<g id="myposition">
			<circle id="mycircle" cx="0" cy="0" r="50" fill="yellow"/>
           	</g>
		</g>
		
	</svg>
<!-- this group holds navigation, title and if you like, legend information -->
	<g>
		<!--your map title-->
                 <text id="titel" x="780" y="30" class="titel1">Visualization of </text>
                 <text x="780" y="53" class="titel1">GPS Tracks with SVG </text>
                 <text x="782" y="70" class="titel2">Interactive Map of Switzerland </text>
		<!--coordinate display-->
           	<g font-family="Arial,Helvetica,sans-serif" fill="black" font-size="14px" pointer-events="none">
			<text id="coordX" x="790" y="170" class="trackinfo">X:</text>
			<text id="coordY" x="870" y="170" class="trackinfo">Y:</text>
		</g>
		<!--display width and height of map extent-->
              <g>
			<!-- vertical line, displays current height of map extent -->
			<line stroke="darkblue" stroke-width="1.5" marker-start="url(#myStartArrow)" marker-end="url(#myEndArrow)" x1="770" y1="15" x2="770" y2="498"/>
			<rect fill="aliceblue" x="765" y="211.5" width="12" height="80"/>
			<text id="myScaleTextH" font-family="Arial,Helvetica,sans-serif" fill="darkblue" font-size="15px" text-anchor="middle" transform="translate(775,251.5),rotate(-90)" pointer-events="none">--- m</text>
			<!-- horizontal line, displays current width of map extent -->
			<line stroke="darkblue" stroke-width="1.5" marker-start="url(#myStartArrow)" marker-end="url(#myEndArrow)" x1="10" y1="508" x2="760" y2="508"/>
			<rect fill="aliceblue" x="345" y="500" width="80" height="12"/>
			<text id="myScaleTextW" font-family="Arial,Helvetica,sans-serif" fill="darkblue" font-size="15px" text-anchor="middle" transform="translate(385,512)" pointer-events="none">--- m</text>
			<!-- small rectangle in lower right corner, onclick displays current map extent in real world coordinates -->
			<rect fill="darkblue" x="767.5" y="505.5" width="5" height="5" onclick="showExtent()" />
		</g>
		<!--control map layer visibility with checkBoxes-->
		<g transform="translate(590 225)" id="checkBoxes">
                        <text x="195" y="120" class="navi1">Map Layer Control</text>	
   			  
		<!--the checkbox geometries will be added here -->
		</g>

        <!--GPS Track Infos-->
 		<g id="gpsTrackInfos">
		<text id="trackinfo" x="785" y="426" class="navi1">GPS Track Infos</text>
		<g transform="translate(0 -18)">
   		<text id="trackname" x="800" y="465" class="trackinfo" pointer-events="none">Name: </text>
        <text id="trackstart" x="800" y="480" class="trackinfo">Start time: </text>
        <text id="trackend" x="800" y="495" class="trackinfo">End time: </text>
		<text id="trackdur" x="800" y="510" class="trackinfo">Duration: </text>
        <text id="trackmax" x="800" y="525" class="trackinfo">Max. altitude: </text>
        <text id="trackmin" x="800" y="540" class="trackinfo">Min. altitude: </text>
        <text id="trackdiff" x="800" y="555" class="trackinfo">Diff. altitude: </text>
        <text id="tracklength" x="800" y="570" class="trackinfo">Track length: </text>
        
        
		<!--triangle GPS-Track-Infos--> 
		<polygon points="790,458 790,464 796,461" class="triangle"/>
        <polygon points="790,473 790,479 796,476" class="triangle"/>
        <polygon points="790,488 790,494 796,491" class="triangle"/>
        <polygon points="790,503 790,509 796,506" class="triangle"/>
        <polygon points="790,518 790,524 796,521" class="triangle"/>
        <polygon points="790,533 790,539 796,536" class="triangle"/>
        <polygon points="790,548 790,554 796,551" class="triangle"/>
        <polygon points="790,563 790,569 796,566" class="triangle"/>
		</g>
		<text id="hight2length" x="20" y="545" class="trackinfo">Vertical exaggeration: </text>
		<text id="info_height" x="190" y="545" class="trackinfo">Cur. altitude: </text>
		<text id="info_cur_height" x="290" y="545" class="trackinfo"> </text>
		<text id="info_distance" x="350" y="545" class="trackinfo">Cur. distance: </text>  
		<text id="info_cur_distance" x="465" y="545" class="trackinfo"> </text>
		</g>
		<!--map impressum and status Bar-->
        <g>
		<!--text with this id is required to show help texts-->
        <text id="statusText" x="790" y="150" class="addinfos1" >Status: Your Status Text</text>
        <text x="785" y="646" class="navi1">Additional Information</text>
 	 <!--Author--> 
	 <text x="790" y="662" class="addinfos1">Author:</text>
        <text x="800" y="674" class="addinfos2">- Michael Breitfeld, Student of Cartography, TU Dresden</text>
        <text x="790" y="686" class="addinfos1">Tutors at University:</text>

        <text x="800" y="698" class="addinfos2">- ETH Zurich: Dr. Olaf Schnabel (Co-Author)</text>
        <text x="800" y="710" class="addinfos2">- TU Dresden: Prof. i.R. Dr.-Ing. Ingeborg Wilfert</text>
	 <!--Data Source-->
        <text x="790" y="722" class="addinfos1">Data Sources:</text>
        <text x="800" y="734" class="addinfos2">- National Maps of Switzerland...swisstopo.ch</text>
        <text x="800" y="746" class="addinfos2">- SVG and ECMAScript code fragments...carto.net</text>
        </g>
	</g>
<!-- small reference map, shares the same coordinate system than the main map -->
<!-- it is very recommended that the width and height of the nested svg element has the same ratio as the viewBox width and height -->
<svg id="referenceMap" x="790" y="185" viewBox="483000 -300000 354000 228000" width="205" height="132">
<!-- here you can place any graphical elements for your reference/overview map -->
	<image id="refBgImage" x="483000" y="-300000" width="354000" height="228000" xlink:href="http://www.geofoto.ch/cgi/mapserv?map=/home/an/mapserverdata/relief_u_pk_kombi/relief_u_pk_kombi_jpeg.map&amp;SERVICE=WMS&amp;VERSION=1.1.1&amp;REQUEST=GetMap&amp;LAYERS=pk_kombi,Watermark&amp;SRS=EPSG:21781&amp;BBOX=483000,72000,837000,300000&amp;width=750&amp;height=483&amp;format=image/jpeg" batik:static="true"/>
</svg>


<svg id="elevationProfile" x="10" y="550"  viewBox="0 -5333 20000 5333" width="750" height="200">
      	 
       <g id="gps_profile" transform="scale(1 -1)">
           <g id="mylinie"/>
           <g id="clipping"/> 
           <g clip-path="url(#myclip)">
                <g id="mystufe" opacity="0.75"/>
           </g>
	    <g id="myprofile"/>
           <g id="myrect"/> 
       </g>
       <g id="myzahl"/> 
</svg>



  <rect id="Karte" x="10" y="15" width="750" height="483" fill="none" stroke="darkblue" stroke-width="1px"/>
  <!--weisses Rechteck unter Map-Text-->
  <rect x="15" y="17" width="70" height="18" rx="3" ry="3" class="naviRect" /> 
  <text id="mapTEXT" x="22" y="32" class="navi1">Map</text>

  <!--weisses Rechteck unter Profile-Text-->
  <rect x="15" y="554" width="150" height="18" rx="3" ry="3" class="naviRect"/>
  <text id="eleTEXT" x="22" y="569" class="navi1" >Elevation Profile</text>

 
  
  <rect id="StartRect" x="15" y="737" width="44" height="11" fill="url(#verlauf)" onmouseover="startprof(evt)" onmouseout="startprof(evt)"/>
  <text id="StartProf" x="20" y="746" class="prof" pointer-events="none">Start</text>

  <rect id="EndRect" x="681" y="737" width="35" height="11"  fill="url(#verlauf)" onmouseover="endprof(evt)" onmouseout="endprof(evt)"/>
  <text id="EndProf" x="688" y="746" class="prof" pointer-events="none">End</text>
  
  <rect id="swisstopoRect" x="502" y="480" width="257" height="17" fill="white" fill-opacity="0.7"/>
  <text id="swisstopoCopyRight" x="505" y="493" class="trackinfo"  pointer-events="none">Pixel Maps: 2006 swisstopo (DV033492.2)</text>

  <rect id="mapdatumRect" x="11" y="480" width="170" height="17" fill="white" fill-opacity="0.7"/>
  <text id="mapdatum" x="16" y="493" class="trackinfo"  pointer-events="none">Map datum: CH1903</text>

  <rect id="Karteklein"  x="790" y="184" width="205" height="132" fill="none" stroke="darkblue" stroke-width="1px"/>

 <!-- this group holds the zoom slider and buttons -->
	<g>
		<!-- empty group where zoomSlider is later appended -->
		<g id="mapZoomSlider"/>
	  <text x="785" y="95" class="navi1">Map Navigator</text>
	
		<!-- button for zoom-in, above slider -->
		<g id="zoomIn" cursor="pointer" />
		<!-- button for zoom-out, below slider -->
		<g id="zoomOut" cursor="pointer" />
		<!-- info button -->
		<g id="infoButton" cursor="pointer" />
		<!-- button for full view (f) -->
		<g id="zoomFull" cursor="pointer" />
		<!-- button for manual zoom (rectangle) -->
		<g id="zoomManual" cursor="pointer" />
		<!-- button for manual pan -->
		<g id="panManual" cursor="pointer" />
		<!-- button for redefining map center -->
		<g id="recenterMap" cursor="pointer" />
		<!-- button for backwarding map extent (extent history) -->
		<g id="backwardExtent" cursor="pointer" />
		<!-- button for forwarding map extent (extent history) -->
		<g id="forwardExtent" cursor="pointer" />
		<!-- button for demonstrating highlight feature of the map -->
		<g id="highlightMap" cursor="pointer" />
		<!-- button for GPS-help -->
		<a xlink:href="helpEN.svg" xlink:title="GPS Tracks - Help" target="_blank"><g id="help" cursor="pointer" /></a>  
		<!-- button for PDF-File -->
		<a xlink:href="print.php?sessionid=1878020034494dcd3818e96&amp;lang=EN&amp;bbox=780349,163192,791558,170411&amp;hdiff=917&amp;hmin=1954&amp;hmax=2871&amp;distance=13.74&amp;time_begin=21_17_30_03_2007&amp;time_end=21_17_30_03_2007&amp;time_durOut=unknown&amp;track_name=GPS TOUR 421 Michael&amp;counter_id=692"><g id="pdf" cursor="pointer" /></a>
   </g>

   
<!--Status First Load Application-->   
<rect id="LoadMap" width="100%" height="100%" fill="white" fill-opacity="0.5"/>
<rect id="RectLoad" x="392" y="359" rx="10" ry="10" width="240" height="50" fill="white" stroke="steelblue" stroke-width="3"/>
<text id="Load" x="405" y="390" font-family="Arial,Helvetica,sans-serif" font-size="16px" font-weight="bold" fill="steelblue">Please Wait  ...  Loading Data</text>
     
</svg>